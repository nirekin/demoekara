name: HookTest
qualifier: GBE

ekara:
  components:
    aws:
      repository: ekara-platform/aws-provider
      ref: 1.0.0-beta1
    swarm:
      repository: ekara-platform/swarm-orchestrator
      ref: 1.0.0-beta1
    visualizer:
      repository: ekara-platform/swarm-visualizer
      ref: 1.0.0-beta1
    hello:
      repository: nirekin/dummy-task
      ref: test
      
tasks:
  hellotask:
    component: hello
    playbook: install.yml

orchestrator:
  component: swarm
  docker:
    params:
      log-driver: json-file
      log-opts: 
        max-size: "20m"
        max-file: "3"
      disable-legacy-registry: true
      userland-proxy: true
      live-restore: false
      hosts: 
      - "unix:///var/run/docker.sock"
      - "tcp://0.0.0.0:2376"
      tls: true
      tlscacert: "/etc/docker/certs/ca.pem"
      tlscert: "/etc/docker/certs/cert.pem"
      tlskey: "/etc/docker/certs/key.pem"
      tlsverify: true 

providers:
  aws:
    component: aws
    params:
      region: "eu-west-1"
      
    env:
      AWS_REGION: {{ .aws_region }}
      AWS_ACCESS_KEY_ID: {{ .aws_access_key_id }}
      AWS_SECRET_ACCESS_KEY: {{ .aws_access_key }}




nodes:
  managers:
    instances: 3        
    provider:
      name: aws
      params:
        instance_type: "t2.micro"
        ami_id: "ami-f90a4880"
        vpc_id: "vpc-880aeaef"
        region: "eu-west-1"
        security_groups:
        - name: group1
          rules:
          - proto: tcp
            ports:
            - 22
            cidr_ip: 0.0.0.0/0
            rule_desc: allow all on port 22
        - name: group2
          rules:
          - proto: tcp
            ports:
            - 80
            cidr_ip: 0.0.0.0/0
            rule_desc: allow all on port 80
          - proto: tcp
            ports:
            - 8080
            cidr_ip: 0.0.0.0/0
            rule_desc: allow all on port 8080
        - name: swarm
          rules:
          - proto: tcp
            ports:
            - 2377
            cidr_ip: 0.0.0.0/0
            rule_desc: cluster management communications
          - proto: tcp
            ports:
            - 7946 
            cidr_ip: 0.0.0.0/0
            rule_desc: communication among nodes
          - proto: udp
            ports:
            - 7946 
            cidr_ip: 0.0.0.0/0
            rule_desc: communication among nodes
          - proto: udp
            ports:
            - 4789 
            cidr_ip: 0.0.0.0/0
            rule_desc: overlay network traffic 
    volumes:
    - path: /data1
      params:
        device_name: xvdf
        volume_type: gp2
        volume_size: 9
        delete_on_termination: true
    - path: /var/lib/docker
      params:
        device_name: xvdg
        volume_type: standard
        volume_size: 1
        delete_on_termination: true
        tags:
          Type: Docker 
          TestTagKey: TestTagValue
    hooks:
      provision:
        before:
          - task: hellotask
        after:
          - task: hellotask

stacks:
  visualizer:
    component: visualizer
    hooks:
      deploy:
        before:
          - task: hellotask
        after:
          - task: hellotask
      undeploy:
        before:
          - task: hellotask
        after:
          - task: hellotask

hooks:
  provision:
    before:
      - task: hellotask
    after:
      - task: hellotask
  deploy:
    before:
      - task: hellotask
    after:
      - task: hellotask
  undeploy:
    before:
      - task: hellotask
    after:
      - task: hellotask
  destroy:
    before:
      - task: hellotask
    after:
      - task: hellotask
